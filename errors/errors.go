/*
Package stacksblockchainapi

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package errors

import (
	"fmt"

	"github.com/cbadawi/go-stacks/models"

	"github.com/apimatic/go-core-runtime/apiError"
)

var NewApiError = apiError.NewApiError

// ExtendedV1FaucetsBtc403Error is a custom error.
type ExtendedV1FaucetsBtc403Error struct {
	apiError.ApiError
	MError  *string `json:"error,omitempty"`
	Success *bool   `json:"success,omitempty"`
}

// NewExtendedV1FaucetsBtc403Error is a constructor for ExtendedV1FaucetsBtc403Error.
// It creates and returns a pointer to a new ExtendedV1FaucetsBtc403Error instance with the given statusCode and body.
func NewExtendedV1FaucetsBtc403Error(
	statusCode int,
	body string) *ExtendedV1FaucetsBtc403Error {
	return &ExtendedV1FaucetsBtc403Error{
		ApiError: apiError.ApiError{
			StatusCode: statusCode,
			Body:       body,
		},
	}
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for ExtendedV1FaucetsBtc403Error.
func (e *ExtendedV1FaucetsBtc403Error) Error() string {
	return fmt.Sprintf("ExtendedV1FaucetsBtc403Error occured %v", e.Body)
}

// PostCoreNodeTransactionsError is a custom error.
// GET request that returns transactions
type PostCoreNodeTransactionsError struct {
	apiError.ApiError
	MError     string      `json:"error"`
	Reason     string      `json:"reason"`
	ReasonData interface{} `json:"reason_data"`
	Txid       string      `json:"txid"`
}

// NewPostCoreNodeTransactionsError is a constructor for PostCoreNodeTransactionsError.
// It creates and returns a pointer to a new PostCoreNodeTransactionsError instance with the given statusCode and body.
func NewPostCoreNodeTransactionsError(
	statusCode int,
	body string) *PostCoreNodeTransactionsError {
	return &PostCoreNodeTransactionsError{
		ApiError: apiError.ApiError{
			StatusCode: statusCode,
			Body:       body,
		},
	}
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for PostCoreNodeTransactionsError.
func (p *PostCoreNodeTransactionsError) Error() string {
	return fmt.Sprintf("PostCoreNodeTransactionsError occured %v", p.Body)
}

// RosettaError is a custom error.
// Instead of utilizing HTTP status codes to describe node errors (which often do not have a good analog), rich errors are returned using this object. Both the code and message fields can be individually used to correctly identify an error. Implementations MUST use unique values for both fields.
type RosettaError struct {
	apiError.ApiError
	Code      int             `json:"code"`
	Message   string          `json:"message"`
	Retriable bool            `json:"retriable"`
	Details   *models.Details `json:"details,omitempty"`
}

// NewRosettaError is a constructor for RosettaError.
// It creates and returns a pointer to a new RosettaError instance with the given statusCode and body.
func NewRosettaError(
	statusCode int,
	body string) *RosettaError {
	return &RosettaError{
		ApiError: apiError.ApiError{
			StatusCode: statusCode,
			Body:       body,
		},
	}
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for RosettaError.
func (r *RosettaError) Error() string {
	return fmt.Sprintf("RosettaError occured %v", r.Body)
}

// BnsError is a custom error.
// Error
type BnsError struct {
	apiError.ApiError
	MError *string `json:"error,omitempty"`
}

// NewBnsError is a constructor for BnsError.
// It creates and returns a pointer to a new BnsError instance with the given statusCode and body.
func NewBnsError(
	statusCode int,
	body string) *BnsError {
	return &BnsError{
		ApiError: apiError.ApiError{
			StatusCode: statusCode,
			Body:       body,
		},
	}
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for BnsError.
func (b *BnsError) Error() string {
	return fmt.Sprintf("BnsError occured %v", b.Body)
}
