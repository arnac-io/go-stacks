/*
Package stacksblockchainapi

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
	"encoding/json"
)

// RunFaucetResponse represents a RunFaucetResponse struct.
// POST request that initiates a transfer of tokens to a specified testnet address
type RunFaucetResponse struct {
	// Indicates if the faucet call was successful
	Success bool `json:"success"`
	// The transaction ID for the faucet call
	TxId *string `json:"txId,omitempty"`
	// Raw transaction in hex string representation
	TxRaw *string `json:"txRaw,omitempty"`
}

// MarshalJSON implements the json.Marshaler interface for RunFaucetResponse.
// It customizes the JSON marshaling process for RunFaucetResponse objects.
func (r *RunFaucetResponse) MarshalJSON() (
	[]byte,
	error) {
	return json.Marshal(r.toMap())
}

// toMap converts the RunFaucetResponse object to a map representation for JSON marshaling.
func (r *RunFaucetResponse) toMap() map[string]any {
	structMap := make(map[string]any)
	structMap["success"] = r.Success
	if r.TxId != nil {
		structMap["txId"] = r.TxId
	}
	if r.TxRaw != nil {
		structMap["txRaw"] = r.TxRaw
	}
	return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for RunFaucetResponse.
// It customizes the JSON unmarshaling process for RunFaucetResponse objects.
func (r *RunFaucetResponse) UnmarshalJSON(input []byte) error {
	temp := &struct {
		Success bool    `json:"success"`
		TxId    *string `json:"txId,omitempty"`
		TxRaw   *string `json:"txRaw,omitempty"`
	}{}
	err := json.Unmarshal(input, &temp)
	if err != nil {
		return err
	}

	r.Success = temp.Success
	r.TxId = temp.TxId
	r.TxRaw = temp.TxRaw
	return nil
}
